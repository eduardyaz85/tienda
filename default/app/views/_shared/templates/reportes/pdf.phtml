<?php
// Require composer autoload
require_once APP_PATH . '../../vendor/autoload.php';

use Mpdf\Mpdf;
use Mpdf\HTMLParserMode;
use Mpdf\Output\Destination;

//Activa el almacenamiento en búfer de la salida
ob_start();
?>
<html>
    <head>
        <title><?= isset($title) ? $title : 'Report'; ?></title>
    </head>
    <body>
    <htmlpageheader name="myHeader1">
        <div class="title-header"><?php // isset($title) ? $title : 'Report'   ?></div>
    </htmlpageheader>

    <?php View::content(); ?>

    <htmlpagefooter name="myFooter1">		
        <table width="100%" style="border-top: 1px dotted grey; vertical-align: bottom; font-family: serif; font-size: 8pt;  color: #000000; font-style: italic;">
            <tr>
                <td width="33%"><span style="font-style: italic;">{DATE d/m/Y}</span></td>
                <td width="33%" align="center" style="font-weight: bold; font-style: italic;"></td>
                <td width="33%" style="text-align: right; ">{PAGENO}/{nbpg}</td>
            </tr>
        </table>
    </htmlpagefooter>
</body>
</html>
<?php
$html = ob_get_clean();
ob_clean();
// Crea una instancia de la clase y le pasa el directorio temporal
$mpdf = new Mpdf(['tempDir' => APP_PATH . 'temp/mpdf', 'margin-top' => 30]);
$mpdf->justifyB4br = true;
//$mpdf->SetProtection(array('print'));
$mpdf->SetTitle("Asdin");
$mpdf->SetAuthor("Asdin");
// Carga el CSS externo
$stylesheet = file_get_contents('css/pdf.css');
//DwOnline::pr($stylesheet);
//die();
$mpdf->WriteHTML($stylesheet, HTMLParserMode::HEADER_CSS);
$mpdf->margin_header = // Escribe el contenido HTML (Template + View):
        $mpdf->WriteHTML($html);
// Título por defecto
if (!isset($fileName)) {
    $fileName = 'Report';
}
// Obliga la descarga del PDF
$mpdf->Output("$fileName.pdf", Destination::DOWNLOAD);
exit;
